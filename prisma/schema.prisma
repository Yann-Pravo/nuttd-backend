// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

model Session {
  id          String   @id
  sid         String   @unique
  data        String
  expiresAt   DateTime
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  username  String
  followers User[]    @relation("UserFollows")
  following User[]    @relation("UserFollows")
  guilds    Guild[]
  nuts      Nut[]
  role      Role      @default(USER)
  profile   Profile?
}

model Profile {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  firstname String?
  lastname  String?
  age       Int
  gender    Gender    @default(MALE)
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @unique
}

model Nut {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  date        DateTime
  city        String
  country     String
  coordinates String?
  solo        Boolean   @default(true)
  nutter      User?     @relation(fields: [nutterId], references: [id])
  nutterId    String?
}

model Guild {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  users     User[]
}

